<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DefaultValidationError" xml:space="preserve">
    <value>Unable to validate document contents</value>
  </data>
  <data name="ErrorBelowChangeLimit" xml:space="preserve">
    <value>Change ratio is below limit. No changes are made to the group members</value>
  </data>
  <data name="ErrorGrouperDocumentNotValid" xml:space="preserve">
    <value>JSON document does not represent a valid Grouper document</value>
  </data>
  <data name="GenericErrorMessage" xml:space="preserve">
    <value>An error occured</value>
  </data>
  <data name="ValidationCouldNotDeserializeJson" xml:space="preserve">
    <value>Unable to deserialize JSON to intermediate Grouper document. Check if JSON represents a Grouper document</value>
  </data>
  <data name="ValidationErrorDocumentIdNotValid" xml:space="preserve">
    <value>Document ID is missing or not a valid GUID (ID: {0})</value>
  </data>
  <data name="ValidationErrorDuplicateMemberObject" xml:space="preserve">
    <value>The same member object can only appear once for each group (Member source: {0}, Member action: {1}, Member count: {2})</value>
  </data>
  <data name="ValidationErrorDuplicateRule" xml:space="preserve">
    <value>The same rule name and value cannot appear more than once (Rule name: {0}, Rule value: {1})</value>
  </data>
  <data name="ValidationErrorDuplicateRuleName" xml:space="preserve">
    <value>Rule name can only appear once for every rulse set (Rule name: {0})</value>
  </data>
  <data name="ValidationErrorGroupIdNotValid" xml:space="preserve">
    <value>Group ID is missing or not a valid GUID (ID: {0})</value>
  </data>
  <data name="ValidationErrorGroupNameIsNullOrEmpty" xml:space="preserve">
    <value>Group name is missing or empty</value>
  </data>
  <data name="ValidationErrorIllegalInterval" xml:space="preserve">
    <value>Processing interval hint must be greater or equal to zero</value>
  </data>
  <data name="ValidationErrorInvalidCombinationOfGroupStoreAndMemberSource" xml:space="preserve">
    <value>Invalid combination of group store and member source (Group store: {0}, Member source: {1})</value>
  </data>
  <data name="ValidationErrorInvalidCombinationOfRules" xml:space="preserve">
    <value>This combination of rules is not valid for selected member source (Member source: {0})</value>
  </data>
  <data name="ValidationErrorInvalidGroupStore" xml:space="preserve">
    <value>Group store is missing or invalid (Group store: {0})</value>
  </data>
  <data name="ValidationErrorInvalidMemberAction" xml:space="preserve">
    <value>Member action is missing or invalid. Valid actions are "Include" or "Exclude" (Member action: {0})</value>
  </data>
  <data name="ValidationErrorInvalidMemberSource" xml:space="preserve">
    <value>Member source is missing or invalid (Member source: {0})</value>
  </data>
  <data name="ValidationErrorInvalidOwnerAction" xml:space="preserve">
    <value>Owner action is missing or invalid. Valid actions are "AddAll", "KeepExisting" or "MatchSource" (Owner action: {0})"</value>
  </data>
  <data name="ValidationErrorInvalidRuleName" xml:space="preserve">
    <value>Rule name is missing or can not be used in combination with the selected member source (Rule name: {0}, Member source: {1})</value>
  </data>
  <data name="ValidationErrorInvalidUpn" xml:space="preserve">
    <value>Rule value is not a valid UserPrincipalName (Rule value: {0})</value>
  </data>
  <data name="ValidationErrorMemberObjectHasNoRules" xml:space="preserve">
    <value>No rules found for member object</value>
  </data>
  <data name="ValidationErrorNoMemberObjects" xml:space="preserve">
    <value>No member objects found</value>
  </data>
  <data name="ValidationErrorRuleValueDoesNotValidate" xml:space="preserve">
    <value>Rule value is invalid (Rule name: {0}, Rule value: {1})</value>
  </data>
  <data name="ValidationErrorRuleValueIsNullOrEmpty" xml:space="preserve">
    <value>Rule value is missing (Rule: {0})</value>
  </data>
  <data name="ValidationErrorSourceGroupSameAsTarget" xml:space="preserve">
    <value>The same group cannot be used both as member source and target group</value>
  </data>
  <data name="ValidationErrorStoreNotRecognized" xml:space="preserve">
    <value>The validator does not recognize the group store {0}</value>
  </data>
  <data name="ValidationJsonMissingError" xml:space="preserve">
    <value>The JSON string is null or empty</value>
  </data>
  <data name="ValidationJsonParsingError" xml:space="preserve">
    <value>An error occured while parsing JSON document on line {0} column {1}. The error message is: {2}</value>
  </data>
</root>